// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Analyzes X-ray images for potential bone fractures or abnormalities.
 *
 * - xrayImageAnalysis - A function that handles the X-ray image analysis process.
 * - XrayImageAnalysisInput - The input type for the xrayImageAnalysis function.
 * - XrayImageAnalysisOutput - The return type for the xrayImageAnalysis function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const XrayImageAnalysisInputSchema = z.object({
  photoUrl: z.string().describe('The URL of the X-ray image.'),
});
export type XrayImageAnalysisInput = z.infer<typeof XrayImageAnalysisInputSchema>;

const XrayImageAnalysisOutputSchema = z.object({
  analysis: z.string().describe('The analysis of the X-ray image, including potential bone fractures or abnormalities.'),
  severity: z.string().describe('The severity of the potential issues found in the X-ray image.'),
});
export type XrayImageAnalysisOutput = z.infer<typeof XrayImageAnalysisOutputSchema>;

export async function xrayImageAnalysis(input: XrayImageAnalysisInput): Promise<XrayImageAnalysisOutput> {
  return xrayImageAnalysisFlow(input);
}

const prompt = ai.definePrompt({
  name: 'xrayImageAnalysisPrompt',
  input: {
    schema: z.object({
      photoUrl: z.string().describe('The URL of the X-ray image.'),
    }),
  },
  output: {
    schema: z.object({
      analysis: z.string().describe('The analysis of the X-ray image, including potential bone fractures or abnormalities.'),
      severity: z.string().describe('The severity of the potential issues found in the X-ray image.'),
    }),
  },
  prompt: `You are an expert radiologist specializing in analyzing X-ray images for bone fractures and abnormalities.

You will use this information to analyze the X-ray image and identify any potential issues.

Analyze the following X-ray image and provide a detailed analysis of any potential bone fractures or abnormalities, as well as the severity of the issues found.

X-ray Image: {{media url=photoUrl}}
`,
});

const xrayImageAnalysisFlow = ai.defineFlow<
  typeof XrayImageAnalysisInputSchema,
  typeof XrayImageAnalysisOutputSchema
>({
  name: 'xrayImageAnalysisFlow',
  inputSchema: XrayImageAnalysisInputSchema,
  outputSchema: XrayImageAnalysisOutputSchema,
}, async input => {
  const {output} = await prompt(input);
  return output!;
});

